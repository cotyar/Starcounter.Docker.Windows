<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.postsharp.org/1.0/configuration" ReferenceDirectory="{$ScInputDirectory}">

  <!-- Import our tasks -->
  <Using PlugInFile="ScAnalyze.psplugin"/>
  <Using PlugInFile="ScRuntime.psplugin"/>

  <!-- Default values of properties -->
  <Property Name="DontCopyToOutput" Value="false" Overwrite="false"/>
  
  <!-- 
  This set of tasks is what PostSharp will execute when a Starcounter user
  application is being "weaved", i.e. this set of tasks dictates the flow of
  the Starcounter weaver.
  
  We are utilizing the option to execute projects in a "phased" maner, meaning
  that all tasks will execute in groups rather than sequential. By doing this,
  we ensure that all assemblies first will have been analyzed before any of them
  is being transformed, and that they all have been fully transformed before
  the are being compiled.
  -->
  <Tasks>
    
    <!-- We disable this task because we execute it manually -->
    <IndexUsages Disabled="true"/>

    <!-- 
    We begin with analysis - we inspect the assembly to see if it reference
    Starcounter and hence we need to weave it.
    -->
    <ScAnalyze 
      SaveTo="{$ScCacheDirectory}\{$AssemblyName}.schema" 
      Timestamp="{$CacheTimestamp}" 
      />
    
    <!-- 
    After analysis, the heart of the weaver - the engine transforming all
    Entity classes - is executed.
    -->
    <ScTransform InputFile="" />

    <!-- We then run some miscellonous tasks. -->
    <!--
    Currently disabled. See ScTransactionScopeTask.cs for comments.
    <ScTransactionScope />
    -->
    
    <!--
    Since "connection bound objects" is not something we really promote
    right now - or they are even documented - the execution of this task
    is currently disabled.
      For some information about this, consult the forum thread:
      http://www.starcounter.com/forum/showthread.php?1419-Some-thoughts-and-questions-about-weaver-related-features-in-Green
    <ScConnectionBoundObject /> 
    -->
    
    <!-- 
    Run the task looking for system threading calls, trying to make them
    better part of the cooperative scheduler.
    -->
    <ScEnhanceThreadingTask />
    
    <!-- 
    Now we compile the weaved code into a binary form, writing the file to
    the cache. Compiling is done using a standard PostSharp task.
    -->
    <Compile 
      TargetFile="{$ScCacheDirectory}\{$AssemblyName}{$AssemblyExtension}"
      IntermediateDirectory="{$TempDirectory}\{$AssemblyName}"
      CleanIntermediate="false"
      SignAssembly="false"
      />

    <!--
    Touch the file(s) in the cache directory, making sure they all
    share the same time last written to.
    -->
    <ScTouch
      Files="{$ScCacheDirectory}\{$AssemblyName}{$AssemblyExtension};{$ScCacheDirectory}\{$AssemblyName}.pdb"
      Timestamp="{$CacheTimestamp}"
      />
    
    <!-- 
    After we have compiled the weaved file, we make sure it gets copied from
    the cache into the defined output directory. This directory is normally the
    directory from where code will be loaded by the database engine.
    -->
    <ScCopy 
      Disabled="{$DontCopyToOutput}"
      InputFiles="{$ScCacheDirectory}\{$AssemblyName}{$AssemblyExtension};{$ScCacheDirectory}\{$AssemblyName}.pdb;{$ScCacheDirectory}\{$AssemblyName}.schema"
      OutputFiles="{$ScOutputDirectory}\{$AssemblyName}{$AssemblyExtension};{$ScOutputDirectory}\{$AssemblyName}.pdb;{$ScOutputDirectory}\{$AssemblyName}.schema"
      />
    
  </Tasks>
</Project>